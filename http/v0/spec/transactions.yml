openapi: '3.0.2'
info:
  title: Transactions API
  description: API for CRuD operations in a ledger.
  license:
    name: LGPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: '0.0.0'
servers:
  - url: http://localhost:3333
paths:
  /transactions:
    post:
      summary: Create a transaction
      description: Create a transaction
      tags:
        - Transactions
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestTransaction'
      responses:
        '201':
          $ref: '#/components/responses/createdTransaction'
    get:
      summary: List transactions
      description: List transactions
      tags:
        - Transactions
      parameters:
        - $ref: 'shared.yml#/components/parameters/cursor'
        - $ref: 'shared.yml#/components/parameters/limit'
      operationId: listTransactions
      responses:
        '200':
          $ref: '#/components/responses/listTransactions'

  /transactions/{transactionId}:
    get:
      summary: Get a transaction resource by its ID
      description: Get a transaction resource by its ID
      tags:
        - Transactions
      operationId: getTransaction
      parameters:
        - $ref: '#/components/parameters/transactionId'
      responses:
        '200':
          $ref: '#/components/responses/getTransaction'

components:
  schemas:
    responseTransaction:
      type: object
      properties:
        id:
          $ref: 'shared.yml#/components/schemas/uuid'
        description:
          type: string
        entries:
          type: array
          items:
            $ref: 'entries.yml#/components/schemas/entry'
        createdAt:
          $ref: 'shared.yml#/components/schemas/time'
    requestEntry:
      type: object
      properties:
        description:
          type: string
        debitAccount:
          $ref: 'shared.yml#/components/schemas/uuid'
        creditAccount:
          $ref: 'shared.yml#/components/schemas/uuid'
        amount:
          $ref: 'entries.yml#/components/schemas/amount'
      required:
        - "debitAccount"
        - "creditAccount"
        - "amount"
    requestTransaction:
      type: object
      properties:
        transaction:
          type: object
          properties:
            description:
              type: string
            entries:
              type: array
              minLength: 1
              items:
                $ref: '#/components/schemas/requestEntry'
          required:
            - "description"
            - "entries"

  responses:
    getTransaction:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/responseTransaction'
    listTransactions:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/components/schemas/responseTransaction'
    createdTransaction:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              transaction:
                $ref: '#/components/schemas/responseTransaction'
  parameters:
    transactionId:
      name: transactionId
      in: path
      required: true
      description: 'required uuid url parameter to get a specific transaction resource.'
      schema:
        $ref: 'shared.yml#/components/schemas/uuid'

